(()=>{"use strict";var t={776:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a{static async getCarsNames(){try{const t=await fetch("./assets/jsons/carNames.json",{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`Something went wrong! ${t.status}: ${t.statusText}`);return await t.json()}catch(t){console.error(t)}}static async getAllCars(){try{const t=await fetch(`${a.link}/garage`);if(!t.ok)throw new Error(`Something went wrong! ${t.status}: ${t.statusText}`);return await t.json()}catch(t){console.error(t)}}static async createCar(t={}){try{const e=await fetch(`${a.link}/garage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}static async deleteCar(t){try{const e=await fetch(`${a.link}/garage/${t}`,{method:"DELETE"});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}static async deleteWinner(t){try{const e=await fetch(`${a.link}/winners/${t}`,{method:"DELETE"});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}static async changeDriveMode(t,e){const n=await fetch(`${a.link}/engine?id=${t}&status=${e}`,{method:"PATCH"});if(500===n.status)throw new Error(`Car №${t} has been stopped suddenly. It's engine was broken down`);if(!n.ok)throw new Error(`Something went wrong! ${n.status}: ${n.statusText}`);return n.json()}static async getCar(t){try{const e=await fetch(`${a.link}/garage/${t}`,{method:"GET"});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}static async updateCar(t,e={}){try{const n=await fetch(`${a.link}/garage/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!n.ok)throw new Error(`Something went wrong! ${n.status}: ${n.statusText}`);return await n.json()}catch(t){console.error(t)}}static async getCars(t=1,e=7){try{const n=await fetch(`${a.link}/garage?_page=${t}&_limit=${e}`,{method:"GET"});if(!n.ok)throw new Error(`Something went wrong! ${n.status}: ${n.statusText}`);return await n.json()}catch(t){console.error(t)}}static async getWinners(t=1,e=10,n="id",s="ASC"){try{const r=await fetch(`${a.link}/winners?_page=${t}&_limit=${e}&_sort=${n}&_order=${s}`,{method:"GET"});if(!r.ok)throw new Error(`Something went wrong! ${r.status}: ${r.statusText}`);return await r.json()}catch(t){console.error(t)}}static async getAllWinners(){try{const t=await fetch(`${a.link}/winners`,{method:"GET"});if(!t.ok)throw new Error(`Something went wrong! ${t.status}: ${t.statusText}`);return await t.json()}catch(t){console.error(t)}}static async createWinner(t={}){try{const e=await fetch(`${a.link}/winners`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}static async updateWinner(t,e={}){try{const n=await fetch(`${a.link}/winners/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!n.ok)throw new Error(`Something went wrong! ${n.status}: ${n.statusText}`);return await n.json()}catch(t){console.error(t)}}static async getWinner(t){try{const e=await fetch(`${a.link}/winners/${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error(`Something went wrong! ${e.status}: ${e.statusText}`);return await e.json()}catch(t){console.error(t)}}}a.link="http://127.0.0.1:3000",e.default=a},923:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=a(724),r=n(a(776)),o=n(a(13)),i=n(a(949));class c{static async drive(t){c.unsetAnimation(t);const e=await r.default.changeDriveMode(t,"started");c.toggleEngineButtons("start",t),c.setAnimation(t,e);try{return await r.default.changeDriveMode(t,"drive"),{id:t,time:(0,s.getTime)(e.velocity,e.distance)}}catch(e){throw console.log(e),c.pause(t),new Error(e)}}static async pause(t){await r.default.changeDriveMode(t,"stopped");const e=document.querySelector(`.car__pic.car__pic${t}`);e&&(e.style.animationPlayState="paused")}static async stop(t){c.unsetAnimation(t),c.toggleEngineButtons("stop",t),await r.default.changeDriveMode(t,"stopped")}static unsetAnimation(t){const e=document.querySelector(`.car__pic.car__pic${t}`);e&&(e.classList.remove("car__pic-animation"),e.style.animationDuration="unset",e.style.animationPlayState="unset")}static setAnimation(t,e){const a=document.querySelector(`.car__pic.car__pic${t}`);if(a){const t=(0,s.getTime)(e.velocity,e.distance);a.classList.add("car__pic-animation"),a.style.animationDuration=`${t}ms`,a.style.animationPlayState="running"}}static toggleEngineButtons(t,e){const a=document.querySelector(`#car__start_${e}`),n=document.querySelector(`#car__stop_${e}`);a&&n&&("start"===t?(a.disabled=!0,n.disabled=!1):a.disabled=!1)}static async create(){const t=document.querySelector(".control-panel__creating_name").value,e=document.querySelector(".control-panel__creating_color").value;await r.default.createCar({name:t,color:e}),await o.default.updateGaragePage()}static async remove(t){const e=i.default.getID(t);await r.default.deleteCar(e),(await r.default.getAllWinners()).some((t=>t.id===e))&&await r.default.deleteWinner(e),await o.default.updateGaragePage()}static async select(t){const e=document.querySelector(".control-panel__updating_name"),a=document.querySelector(".control-panel__updating_color"),n=i.default.getID(t);if(n&&e&&a&&e instanceof HTMLInputElement&&a instanceof HTMLInputElement){const s=await r.default.getCar(n),{name:o,color:i}=s;e.value=o,a.value=i;const c=t.closest(".car");document.querySelectorAll(".active").forEach((t=>{t.classList.remove("active")})),c.classList.add("active"),document.querySelector(".control-panel__updating_confirm").removeAttribute("disabled")}}static async update(){const t=document.querySelector(".active"),e=document.querySelector(".control-panel__updating_name"),a=document.querySelector(".control-panel__updating_color");if(t&&e&&a&&e instanceof HTMLInputElement&&a instanceof HTMLInputElement){const n=e.value,s=a.value,o=t.getAttribute("data-num");await r.default.updateCar(Number(o),{name:n,color:s}),t.querySelector("h3").textContent=n,t.querySelector(".car__pic").setAttribute("style",`color:${s}`),t.classList.remove("active"),e.value="",a.value="#000000"}}static initListener(){document.addEventListener("click",(async t=>{const{target:e}=t;if(e instanceof HTMLElement)if(e.closest(".car__remove"))c.remove(e);else if(e.closest(".car__start")){const t=i.default.getID(e);c.drive(t).then((()=>{console.log(`The car №${t} has reached the finish line.`)})).catch((()=>{console.log(`The car №${t} broke down`)}))}else if(e.closest(".car__stop")){const t=i.default.getID(e);c.stop(t),e.setAttribute("disabled","true"),c.toggleEngineButtons("stop",t)}else e.closest(".car__select")&&c.select(e)}))}}e.default=c},331:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(a(776)),r=n(a(923)),o=n(a(13)),i=n(a(949)),c=n(a(831)),l=a(724);class d{static initListener(){document.addEventListener("focus",(async t=>{const{target:e}=t;if(e instanceof HTMLInputElement){if(e.classList.contains("control-panel__creating_name")&&""===e.value){let t;try{t=await s.default.getCarsNames()}catch(t){console.error(t)}finally{e.value=(0,l.getRandomName)(t)}}e.classList.contains("control-panel__creating_color")&&(e.value=(0,l.getRandomColor)())}}),!0),document.addEventListener("submit",(t=>{const{target:e}=t;t.preventDefault(),e instanceof HTMLElement&&(e.classList.contains("control-panel__creating")?r.default.create():e.classList.contains("update")&&(r.default.update(),document.querySelector(".control-panel__updating_confirm").setAttribute("disabled","disabled")))})),document.addEventListener("click",(t=>{const{target:e}=t;e instanceof HTMLButtonElement&&(e.closest(".control-panel__creating_color")?e.value=(0,l.getRandomColor)():e.closest(".generate-cars")?d.generateCarView(e,100):e.closest(".remove-all")?d.removeAllCar(e):e.closest(".race-all")?d.race(e):e.closest(".reset-all")&&d.resetAllCar())}))}static content(){return'<div class="control-panel">\n    <form action="" class="control-panel__creating buttons-container">\n      <input class="control-panel__creating_name" type="text" required placeholder="Enter car name"   />\n      <input class="control-panel__creating_color" type="color" />\n      <button type="submit" value="Create" class="control-panel__creating_confirm">Create</button>\n    </form>\n    <form action="" class="update buttons-container">\n      <input class="control-panel__updating_name" type="text" required placeholder="Change car name"  />\n      <input class="control-panel__updating_color" type="color" />\n      <button type="submit" value="Update" class="control-panel__updating_confirm" disabled>Update</button>\n    </form>\n    <ul class="buttons-container">\n      <li><button class="race-all">Race</button></li>\n      <li><button class="reset-all" disabled>Reset</button></li>\n      <li><button class="remove-all">Remove cars</button></li>\n      <li><button class="generate-cars">Generate cars</button></li>\n    </ul>\n  </div>'}static updateDisability(t){const e=document.querySelector(".control-panel");"garage"===t?e.classList.remove("disabled"):e.classList.add("disabled")}static async generateCars(t){const e=new Array(t).fill(void 0);let a;try{a=await s.default.getCarsNames()}catch(t){console.error(t)}finally{await Promise.allSettled(e.map((async()=>await s.default.createCar({name:(0,l.getRandomName)(a),color:(0,l.getRandomColor)()}))))}}static async generateCarView(t,e){t.classList.add("downloading"),await d.generateCars(e),t.classList.remove("downloading"),await o.default.updateGaragePage()}static async race(t){const e=await s.default.getCars(c.default.activeGaragePage,c.default.limit.garage);if(e.length>=2){i.default.blockButton("block",t);const a=e.map((async t=>{const e=await r.default.drive(t.id);return Object.assign(t,e)}));Promise.any(a).then((t=>{d.updateWinner(t)})).catch((t=>{console.log(t),d.printWinnerScreen("no one",0),document.addEventListener("click",d.removeWinnerScreen,{once:!0})})),Promise.allSettled(a).then((()=>{i.default.blockButton("unblock",t),console.log("Race is over!")}))}}static printWinnerScreen(t,e){const a=(e/1e3).toFixed(3),n=document.querySelector(".race-result");n.classList.add("active"),n.outerHTML=`<div class="race-result active">\n    ${"no one"!==t?`<h2>Race is over!</h2>\n<p class="winner-message">&#9733;${t}&#9733;<br> finished first in ${a} seconds<p>`:'<h2>Race is over!</h2>\n<p class="winner-message">No one finished first<p>'}\n    </div>`}static removeWinnerScreen(){document.querySelector(".race-result").classList.remove("active")}static async resetAllCar(){(await s.default.getCars(c.default.activeGaragePage,c.default.limit.garage)).map((t=>r.default.stop(t.id))),document.querySelector(".race-all").removeAttribute("disabled"),document.querySelector(".reset-all").setAttribute("disabled","disabled"),document.querySelectorAll(".car__stop").forEach((t=>{t.setAttribute("disabled","disabled")}))}static async updateWinner(t){const{name:e,time:a,id:n}=t;d.printWinnerScreen(e,a),document.addEventListener("click",d.removeWinnerScreen,{once:!0});try{const t=(await s.default.getAllWinners()).filter((t=>t.id===n));if(t.length){const e=a<t[0].time?a:t[0].time;s.default.updateWinner(n,{wins:t[0].wins+1,time:e})}else s.default.createWinner({id:n,wins:1,time:a})}catch(t){s.default.createWinner({id:n,wins:1,time:a})}}static async removeAllCar(t){t.classList.add("downloading");const e=(await s.default.getAllCars()).map((t=>s.default.deleteCar(t.id)));await Promise.allSettled(e),c.default.activeGaragePage=1,c.default.activeWinnersPage=1,t.classList.remove("downloading"),(await s.default.getAllWinners()).forEach((async t=>{await s.default.deleteWinner(t.id)})),await o.default.updateGaragePage()}}e.default=d},13:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(a(776)),r=n(a(831)),o=n(a(878)),i=n(a(949));class c{static async getCarsAndUpdateContainer(){await c.getCarsCollection(),i.default.updateMainContent(c.content())}static content(){return c.carCollection.map((t=>o.default.content(t))).join(" ")}static async getCarsCollection(){const{limit:t,activeGaragePage:e}=r.default,a=await s.default.getCars(e,t.garage);c.carCollection=a}static async getAllCars(){const t=await s.default.getAllCars();return c.allCars=t,t}static async updateGaragePage(){await c.getAllCars();const t=r.default.checkAmountOfPages("garage",c.allCars);t<r.default.activeGaragePage&&(r.default.activeGaragePage=t);const{activeGaragePage:e}=r.default;await c.getCarsAndUpdateContainer(),i.default.updateTotalCarsNumber(c.allCars),i.default.updatePageNumber(e,t),i.default.togglePaginationButtons(1===e,e===t)}}c.carCollection=[],c.allCars=[],e.default=c},303:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(a(923)),r=n(a(331)),o=n(a(13)),i=n(a(949)),c=n(a(831)),l=n(a(909)),d=n(a(821));class u{static addListener(){d.default.initListener(),l.default.initListener(),r.default.initListener(),s.default.initListener(),window.addEventListener("load",(async()=>{const t=window.location.hash.replace("#","");0===t.length&&(window.location.href="#garage"),"garage"!==t&&"winners"!==t||(c.default.activePage=t,i.default.toggleNavigationButtons(t),i.default.updateTitle(t),r.default.updateDisability(t),"garage"===t?await o.default.updateGaragePage():await d.default.updateWinnersPage())})),window.addEventListener("hashchange",(async()=>{const t=window.location.hash.replace("#","");"garage"!==t&&"winners"!==t||(c.default.activePage=t,i.default.toggleNavigationButtons(t),i.default.updateTitle(t),r.default.updateDisability(t),"garage"===t?await o.default.updateGaragePage():await d.default.updateWinnersPage())}))}static content(){return`\n    <header class="header">\n    <h2><span class="page__title"></span><span class="page__cars-total"></span></h2>\n    <h1>Async race</h1>\n    ${r.default.content()}\n    <nav class="navigation buttons-container">\n      <a href="./#garage" id="to-garage" class="to-garage button">to garage</a>\n      <a href="./#winners" id="to-winners" class="to-winners button">to winners</a>\n    </nav>\n   \n    <div class="race-result"></div>\n    </header>\n      <main>\n      </main>\n      <nav>\n      ${l.default.content()}\n      <h3 class="page-number">Page: <span class="current"></span>/<span class="total"></span></h3>\n      </nav>\n       <footer class="footer">\n    <div>\n      <a href="https://rs.school/js/" target="_blank">\n        <img src="./assets/images/rs-school-js.svg" alt="link" width="60" />\n      </a>\n    </div>\n    <div>\n      <a href="https://github.com/SavitskayaKseniya22" target="_blank"> made by Kseniya Savitskaya </a>\n    </div>\n    <div>© 2023</div>\n  </footer>\n    `}static render(){const t=document.querySelector("body");t&&t.insertAdjacentHTML("afterbegin",u.content()),u.addListener()}}u.render()},949:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static updatePageNumber(t,e){document.querySelector(".current").textContent=String(t),document.querySelector(".total").textContent=String(e)}static updateTitle(t){document.querySelector(".page__title").textContent=t}static async updateTotalCarsNumber(t){document.querySelector(".page__cars-total").textContent=`(${t.length})`}static toggleNavigationButtons(t){const e=document.querySelector(".to-garage"),a=document.querySelector(".to-winners");"garage"===t?(e.classList.add("disabled"),a.classList.remove("disabled")):(e.classList.remove("disabled"),a.classList.add("disabled"))}static togglePaginationButtons(t,e){const a=document.querySelector(".prev-page"),n=document.querySelector(".next-page");t&&e?(a.classList.add("disabled"),n.classList.add("disabled")):t?(a.classList.add("disabled"),n.classList.remove("disabled")):e?(a.classList.remove("disabled"),n.classList.add("disabled")):t||e||(n.classList.remove("disabled"),a.classList.remove("disabled"))}static updateMainContent(t){const e=document.querySelector("main");e&&(e.innerHTML=t)}static getCarImg(t,e){return`<i style="color:${t};" class="fa-solid fa-car-side car__pic car__pic${e}"></i>`}static blockButton(t,e){const a=document.querySelectorAll(".header button"),n=document.querySelectorAll(".pagination button"),s=document.querySelectorAll(".car__remove"),r=Array.from(a).concat(Array.from(n)).concat(Array.from(s));"block"===t?(e.classList.add("downloading"),document.querySelector(".to-winners").classList.add("disabled"),r.forEach((t=>{t.setAttribute("disabled","disabled")}))):(e.classList.remove("downloading"),r.forEach((t=>{t.removeAttribute("disabled")})),document.querySelector(".to-winners").classList.remove("disabled"),e.setAttribute("disabled","disabled"),document.querySelector(".control-panel__updating_confirm").setAttribute("disabled","disabled"))}static getID(t){const e=t.closest(".car");return Number(e.getAttribute("data-num"))}}},831:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class a{static checkAmountOfPages(t,e){return Math.ceil(e.length/a.limit[t])||1}}a.activePage="garage",a.activeGaragePage=1,a.activeWinnersPage=1,a.order="ASC",a.sort="id",a.limit={winners:10,garage:7},e.default=a},878:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static content(t){const{id:e,name:a,color:n}=t;return`<div class="car" data-num=${e}>\n    <h3>${a}</h3>\n    <ul class="buttons-container">\n      <li><button class="car__select">Select</button></li>\n      <li><button class="car__remove">Remove</button></li>\n      <li><button id="car__start_${e}" class="car__start">Start</button></li>\n      <li><button id="car__stop_${e}" class="car__stop" disabled>Reset</button></li>\n    </ul>\n    <div class="car__track">\n    <i style="color:${n};" class="fa-solid fa-car-side car__pic car__pic${e}"></i>\n    <i class="fa-solid fa-flag"></i>\n    </div>\n  </div>`}}},909:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(a(13)),r=n(a(831)),o=n(a(821));class i{static initListener(){document.addEventListener("click",(t=>{const e=t.target;"prev-page"===e.className?i.switchToDifferentPageNumber("decrease"):"next-page"===e.className&&i.switchToDifferentPageNumber("increase")}))}static content(){return'<ul class="buttons-container">\n    <li><button class="prev-page">Prev</button></li>\n    <li><button class="next-page">Next</button></li> \n  </ul>'}static updateCount(t,e,a){return r.default[e]="decrease"===t?a-1:a+1,r.default[e]}static async switchToDifferentPageNumber(t){const{activeGaragePage:e,activeWinnersPage:a,activePage:n}=r.default,c="garage"===n?r.default.checkAmountOfPages("garage",s.default.allCars):r.default.checkAmountOfPages("winners",o.default.allCars),l="garage"===n?e:a;(l>1&&"decrease"===t||"increase"===t&&l<c)&&("garage"===n?(i.updateCount(t,"activeGaragePage",e),await s.default.updateGaragePage()):(i.updateCount(t,"activeWinnersPage",a),await o.default.updateWinnersPage()))}}e.default=i},724:(t,e)=>{function a(t){const e=Math.random()*(t+1)-.5;return Math.round(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.getTime=e.getRandomName=e.getRandomColor=void 0,e.getRandomColor=function(){return["#"].concat(new Array(6).fill(1).map((()=>"0123456789ABCDEF"[Math.floor(16*Math.random())]))).join("")},e.getRandomName=function(t){if(void 0!==t){const e=a(Object.keys(t).length-1),n=Object.keys(t)[e],s=a(Object.values(t)[e].length-1);return`${n} ${Object.values(t)[e][s]}`}return`Car ${a(1e5)}`},e.getTime=function(t,e){return e/t}},821:function(t,e,a){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(a(776)),r=n(a(831)),o=n(a(949));class i{static initListener(){document.addEventListener("click",(t=>{const e=t.target;if(e.closest(".id")||e.closest(".wins")||e.closest(".time")){if("INPUT"===e.tagName)return;i.changeSortType(e)}}))}static async getCarsAndUpdateContainer(){await i.getCarsCollection(),o.default.updateMainContent(i.content())}static changeSortType(t){const{sort:e}=r.default,a=t.getAttribute("data-sort");e===a?i.changeOrderType():r.default.sort=a,i.getCarsAndUpdateContainer()}static changeOrderType(){const{order:t}=r.default;r.default.order="ASC"===t?"DESC":"ASC"}static content(){const t=i.carCollection.map((t=>i.makeTableTr(t))).join(" ");return i.makeTable(t)}static async getCarsCollection(){const{activeWinnersPage:t,limit:e,sort:a,order:n}=r.default,o=await s.default.getWinners(t,e.winners,a,n),c=o.map((async t=>s.default.getCar(t.id))),l=await Promise.allSettled(c);i.carCollection=l.map(((t,e)=>"fulfilled"===t.status&&Object.assign(t.value,o[e])))}static async getAllCars(){const t=await s.default.getAllWinners();return i.allCars=t,t}static makeTable(t){return`<table class="winners-table">\n  <tr>\n    <th class="id" >\n      <input type="radio" id="id" name="sort" value="id" ${"id"===r.default.sort?"checked":""} /> <label for="id" data-sort="id">Number</label>\n    </th>\n    <th>Car</th>\n    <th>Name</th>\n    <th class="wins" data-sort="wins">\n      <input type="radio" id="wins" name="sort" value="wins" ${"wins"===r.default.sort?"checked":""} /> <label for="wins" data-sort="wins">Wins</label>\n    </th>\n    <th class="time" data-sort="time">\n      <input type="radio" id="time" name="sort" value="time" ${"time"===r.default.sort?"checked":""} /> <label for="time" data-sort="time">Best time (s)</label>\n    </th>\n  </tr>\n  ${t}\n</table>`}static makeTableTr(t){const{time:e,id:a,name:n,wins:s,color:r}=t,i=(e/1e3).toFixed(3);return`\n  <tr>\n    <td>${a}</td>\n    <td>${o.default.getCarImg(r,a)}</td>\n    <td>${n}</td>\n    <td>${s}</td>\n    <td>${i}</td>\n  </tr>\n`}static async updateWinnersPage(){await i.getAllCars();const t=r.default.checkAmountOfPages("winners",i.allCars);t<r.default.activeWinnersPage&&(r.default.activeWinnersPage=t);const{activeWinnersPage:e}=r.default;await i.getCarsAndUpdateContainer(),o.default.updateTotalCarsNumber(i.allCars),o.default.updatePageNumber(e,t),o.default.togglePaginationButtons(1===e,e===t)}}i.carCollection=[],i.allCars=[],e.default=i}},e={};!function a(n){var s=e[n];if(void 0!==s)return s.exports;var r=e[n]={exports:{}};return t[n].call(r.exports,r,r.exports,a),r.exports}(303)})();